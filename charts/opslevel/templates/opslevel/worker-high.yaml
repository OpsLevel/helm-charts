apiVersion: apps/v1
kind: Deployment
metadata:
  name: opslevel-worker-high
  labels:
    app.kubernetes.io/component: worker-high
    app.kubernetes.io/part-of: opslevel
spec:
  replicas: {{ .Values.opslevel.workerHigh.replicas }}
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 75%
  selector:
    matchLabels:
      app.kuberntes.io/component: worker-high
      app.kubernetes.io/part-of: opslevel
  template:
    metadata:
      labels:
        app.kuberntes.io/component: worker-high
        app.kubernetes.io/part-of: opslevel
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/opslevel/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/opslevel/secret.yaml") . | sha256sum }}
{{- with .Values.opslevel.pod.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      {{- template "opslevel.pullSecrets" . }}
      {{- template "global.nodeSelector" . }}
      priorityClassName: opslevel-normal
      terminationGracePeriodSeconds: 300
      {{- if .Values.certificate.enabled }}
      initContainers:
        - name: init-certs
          image: "{{ template "opslevel.image" . }}"
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - sleep 10; update-ca-certificates; cp -r /etc/ssl/certs/. /data;
          volumeMounts:
            - name: certificate
              mountPath: /usr/local/share/ca-certificates/custom-cert.crt
              subPath: custom-cert.crt
              readOnly: false
            - name: ca
              mountPath: /data
              readOnly: false
      {{- end }}
      containers:
        - name: high-priority
          image: "{{ template "opslevel.image" . }}"
          imagePullPolicy: IfNotPresent
          args:
            - ./bin/run
            - sidekiq
            - --concurrency 5
            - --timeout 290
            - --queue mailers,3
            - --queue alert_sources_sync_HIGH,1
            - --queue documents_HIGH,1
            - --queue custom_actions_HIGH,1
            - --queue integration_data_sync_HIGH,1
            - --queue checks,1
            - --queue runners,1
          envFrom:
            - configMapRef:
                name: 'opslevel'
            - secretRef:
                name: 'opslevel'
            - secretRef:
                name: '{{ .Values.redis.secret.name }}'
            {{- template "opslevel.integration.secrets" . }}
          {{- with .Values.opslevel.workerHigh.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.certificate.enabled }}
          volumeMounts:
            - name: certificate
              mountPath: /usr/local/share/ca-certificates/custom-cert.crt
              subPath: custom-cert.crt
              readOnly: false
            - name: ca
              mountPath: /etc/ssl/certs
          {{- end }}
      {{- if .Values.certificate.enabled }}
      volumes:
        - name: ca
          emptyDir: {}
        - name: certificate
          secret:
            secretName: {{ .Values.certificate.secret.name }}
      {{- end }}
