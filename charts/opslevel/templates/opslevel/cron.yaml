apiVersion: apps/v1
kind: Deployment
metadata:
  name: opslevel-cron
  labels:
    app.kubernetes.io/component: cron
    app.kubernetes.io/part-of: opslevel
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: cron
      app.kubernetes.io/part-of: opslevel
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/component: cron
        app.kubernetes.io/part-of: opslevel
    spec:
      {{- template "opslevel.pullSecrets" . }}
      {{- template "global.nodeSelector" . }}
      priorityClassName: opslevel-normal
      initContainers:
        {{- if .Values.global.certificate }}
        - name: init-certs
          image: ruby:3.2.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - sleep 10; update-ca-certificates; cp -r /etc/ssl/certs/. /data;
          volumeMounts:
            - name: certificate
              mountPath: /usr/local/share/ca-certificates/custom-cert.crt
              subPath: custom-cert.crt
              readOnly: false
            - name: ca
              mountPath: /data
              readOnly: false
        {{- end }}
        - name: migrations
          image: "{{ template "opslevel.image" . }}"
          imagePullPolicy: IfNotPresent
          args:
            - ./bin/init-db
          env: &env
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          envFrom: &envFrom
            - configMapRef:
                name: 'opslevel'
            - secretRef:
                name: 'opslevel'
            - secretRef:
                name: '{{ .Values.redis.secret.name }}'
            - secretRef:
                name: '{{ .Values.elasticsearch.secret.name }}'
            {{- template "opslevel.integration.secrets" . }}
          {{- if .Values.global.certificate }}
          volumeMounts:
            - name: certificate
              mountPath: /usr/local/share/ca-certificates/custom-cert.crt
              subPath: custom-cert.crt
              readOnly: false
            - name: ca
              mountPath: /etc/ssl/certs
          {{- end }}
      containers:
        - name: cron
          image: "{{ template "opslevel.image" . }}"
          imagePullPolicy: IfNotPresent
          args:
            - ./bin/cron
          env: *env
          envFrom: *envFrom
          resources:
            requests:
              cpu: '200m'
              memory: '500Mi'
            limits:
              cpu: '1'
              memory: '2Gi'
          {{- if .Values.global.certificate }}
          volumeMounts:
            - name: certificate
              mountPath: /usr/local/share/ca-certificates/custom-cert.crt
              subPath: custom-cert.crt
              readOnly: false
            - name: ca
              mountPath: /etc/ssl/certs
          {{- end }}
      {{- if .Values.global.certificate }}
      volumes:
        - name: ca
          emptyDir: {}
        - name: certificate
          secret:
            secretName: opslevel-certificate
      {{- end }}