apitoken:
apitokenPath:
apitokenSecret:
  name: opslevel-api-token

image: public.ecr.aws/opslevel/kubectl-opslevel:v2022.01.19

sync:
  # You can use helm's `--set-file sync.config=./opslevel-k8s.yaml` to populate this
  args:
  # - --log-level=DEBUG
  config: |-
    version: "1.1.0"
    service:
      import:
        - selector: # This limits what data we look at in Kubernetes
            apiVersion: apps/v1 # only supports resources found in 'kubectl api-resources --verbs="get,list"'
            kind: Deployment
            excludes: # filters out resources if any expression returns truthy
              - .metadata.namespace == "kube-system"
              - .metadata.namespace == "local-path-storage"
              - .metadata.annotations."opslevel.com/ignore"
          opslevel: # This is how you map your kubernetes data to opslevel service
            name: .metadata.name
            description: .metadata.annotations."opslevel.com/description"
            owner: .metadata.annotations."opslevel.com/owner"
            lifecycle: .metadata.annotations."opslevel.com/lifecycle"
            tier: .metadata.annotations."opslevel.com/tier"
            product: .metadata.annotations."opslevel.com/product"
            language: .metadata.annotations."opslevel.com/language"
            framework: .metadata.annotations."opslevel.com/framework"
            aliases: # This are how we identify the services again during reconciliation - please make sure they are very unique
              - '"k8s:\(.metadata.name)-\(.metadata.namespace)"'
            tags:
              assign: # tag with the same key name but with a different value will be updated on the service
                - '{"imported": "kubectl-opslevel"}'
                - .metadata.labels
                # find annoations with format: opslevel.com/tags.<key name>: <value>
                - '.metadata.annotations | to_entries |  map(select(.key | startswith("opslevel.com/tags"))) | map({(.key | split(".")[2]): .value})'
              create: # tag with the same key name but with a different value with be added to the service
                - '{"environment": .metadata.labels.environment}'
            tools:
              # find annotations with format: opslevel.com/tools.<category>.<displayname>: <url> 
              - '.metadata.annotations | to_entries |  map(select(.key | startswith("opslevel.com/tools"))) | map({"category": .key | split(".")[2], "displayName": .key | split(".")[3], "url": .value})'
            repositories: # attach repositories to the service using the opslevel repo alias - IE github.com:hashicorp/vault
              # find annotations with format: opslevel.com/repo.<displayname>.<repo.subpath.dots.turned.to.forwardslash>: <opslevel repo alias> 
              - '.metadata.annotations | to_entries |  map(select(.key | startswith("opslevel.com/repos"))) | map({"name": .key | split(".")[2], "directory": .key | split(".")[3:] | join("/"), "repo": .value})'

serviceAccount:
  create: true
  name: "opslevel-sync"

additionalConfigMapData:
additionalInitContainers:
additionalVolumes:
additionalVolumeMounts:

# File Wide Settings
nameOverride: ""
fullnameOverride: ""
labels: {}
annotations:
  opslevel.com/description: "A tool that enables you to import & reconcile services with OpsLevel from your Kubernetes clusters."
  opslevel.com/language: "go"
  opslevel.com/framework: "client-go"
  opslevel.com/tags.app_version: "v0.6.3"
securityContext: {}
resources: {}
nodeSelector: {}
tolerations: []
affinity: {}
