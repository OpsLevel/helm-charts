apitoken: "WsguaBJvd44nT2EwFn1bQQIGq9aK7tNA84FI"

image: public.ecr.aws/opslevel/kubectl-opslevel:v0.4.4

sync:
  schedule: "0 12 * * 1"
  # You can use helm's `--set-file sync.config=./opslevel-k8s.yaml` to populate this
  config: |-
    version: "1.1.0"
    service:
      import:
        - selector: # This limits what data we look at in Kubernetes
            apiVersion: apps/v1 # only supports resources found in 'kubectl api-resources --verbs="get,list"'
            kind: Deployment
            excludes: # filters out resources if any expression returns truthy
              - .metadata.namespace == "kube-system"
              - .metadata.namespace == "local-path-storage"
              - .metadata.annotations."opslevel.com/ignore"
          opslevel: # This is how you map your kubernetes data to opslevel service
            name: .metadata.name
            owner: .metadata.namespace
            aliases: # This are how we identify the services again during reconciliation - please make sure they are very unique
              - '"k8s:\(.metadata.name)-\(.metadata.namespace)"'
            tags:
              assign: # tag with the same key name but with a different value will be updated on the service
                - '{"imported": "kubectl-opslevel"}'
                - .spec.template.metadata.labels
              create: # tag with the same key name but with a different value with be added to the service
                - '{"environment": .spec.template.metadata.labels.environment}'


serviceAccount:
  create: true
  name: "opslevel-sync"


# File Wide Settings
nameOverride: ""
fullnameOverride: ""
labels: {}
annotations:
  opslevel.com/description: "A tool that enables you to import & reconcile services with OpsLevel from your Kubernetes clusters."
  opslevel.com/language: "go"
  opslevel.com/tags.app_version: "v0.3.0.beta1"
securityContext: {}
resources: {}
nodeSelector: {}
tolerations: []
affinity: {}
