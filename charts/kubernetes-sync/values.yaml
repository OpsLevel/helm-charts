apitoken:
apitokenPath:
apitokenSecret:
  name: opslevel-api-token

image: public.ecr.aws/opslevel/kubectl-opslevel:v2024.2.26

sync:
  args:
  # IE:
  # - --log-level=DEBUG
  config: |-
    version: 1.3.0
    service:
      import:
        - selector:
            apiVersion: apps/v1
            kind: Deployment
            excludes:
                - .metadata.namespace == "kube-system"
                - .metadata.annotations."opslevel.com/ignore"
          opslevel:
            aliases:
                - '"k8s:\(.metadata.name)-\(.metadata.namespace)"'
                - '"\(.metadata.namespace)-\(.metadata.name)"'
            description: .metadata.annotations."opslevel.com/description"
            framework: .metadata.annotations."opslevel.com/framework"
            language: .metadata.annotations."opslevel.com/language"
            lifecycle: .metadata.annotations."opslevel.com/lifecycle"
            name: .metadata.name
            owner: .metadata.annotations."opslevel.com/owner"
            product: .metadata.annotations."opslevel.com/product"
            properties:
                prop_object: .metadata.annotations.prop_object
            repositories:
                - '{"name": "My Cool Repo", "directory": "", "repo": .metadata.annotations.repo} | if .repo then . else empty end'
                - .metadata.annotations.repo
                - '.metadata.annotations | to_entries |  map(select(.key | startswith("opslevel.com/repo"))) | map({"name": .key | split(".")[2], "directory": .key | split(".")[3:] | join("/"), "repo": .value})'
            system: ""
            tags:
                assign:
                    - '{"imported": "kubectl-opslevel"}'
                    - '.metadata.annotations | to_entries |  map(select(.key | startswith("opslevel.com/tags"))) | map({(.key | split(".")[2]): .value})'
                    - .metadata.labels
                create:
                    - '{"environment": .spec.template.metadata.labels.environment}'
            tier: .metadata.annotations."opslevel.com/tier"
            tools:
                - '{"category": "other", "environment": "production", "displayName": "my-cool-tool", "url": .metadata.annotations."example.com/my-cool-tool"} | if .url then . else empty end'
                - '.metadata.annotations | to_entries |  map(select(.key | startswith("opslevel.com/tools"))) | map({"category": .key | split(".")[2], "displayName": .key | split(".")[3], "url": .value})'

serviceAccount:
  create: true
  name: "opslevel-sync"

additionalConfigMapData:
additionalInitContainers:
additionalVolumes:
additionalVolumeMounts:

# File Wide Settings
nameOverride: ""
fullnameOverride: ""
labels: {}
annotations:
  opslevel.com/description: "A tool that enables you to import & reconcile services with OpsLevel from your Kubernetes clusters."
  opslevel.com/language: "go"
  opslevel.com/framework: "client-go"
  opslevel.com/tags.app_version: "v2024.1.27"
securityContext: {}
resources: {}
nodeSelector: {}
tolerations: []
affinity: {}
